name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CLICOLOR: 1

jobs:
  test:
    name: Test

    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable

    continue-on-error: ${{ matrix.rust != 'stable' }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup Rust
        shell: bash
        run: |
          # Make sure all tools are managed by rustup
          rm -f /home/runner/.cargo/bin/rust-analyzer || true
          rm -r /home/runner/.cargo/bin/rustfmt || true
          rm -f /home/runner/.cargo/bin/cargo-fmt || true

          rustup update ${{ matrix.rust }}

          cat <<EOF >> $GITHUB_STEP_SUMMARY
          ## Rust toolchain ${{ matrix.build}}

          | tool              | version                                   |
          | ----------------- | ----------------------------------------- |
          | gcc               | <span>$(gcc --version | head -n 1)</span> |
          | rustup            | $(rustup --version)                       |
          | toolchain         | $(rustup toolchain list)                  |
          | default toolchain | $(rustup default)                         |
          | rustc             | $(rustc --version)                        |
          | cargo             | $(cargo --version)                        |
          EOF

      - name: Run tests
        run: cargo test --verbose --workspace
